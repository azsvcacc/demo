trigger: none

parameters:
  - name: AgentPool
    displayName: Pool VMImage Select
    type: string
    default: none  
    values:
      - CloudpoolAgentSelect
      - MatrixpoolAgentSelect
      - TestAgentpoolAgentSelect
      - value1
      - value2
      - value3

  - name: CloudPool
    type: boolean
    default: true

  - name: CloudpoolAgentSelect
    displayName: Cloud Pool Agent Select
    type: string
    values:
      - SLAZERVDEVOPS01
      - SLAZERVDEVOPS02
      - VsAgent3
      - VsAgent4

  - name: matrix
    type: boolean
    default: false

  - name: MatrixpoolAgentSelect
    displayName: Matrix Pool Agent Select
    type: string
    values:
      - none
      - SLAZERVDEVOPS11
      - SLAZERVDEVOPS21
      - VsAgent31
      - VsAgent41

  - name: TestAgent
    type: boolean
    default: false

  - name: TestAgentpoolAgentSelect
    displayName: Test Agent Pool Agent Select
    type: string
    values:
      - none
      - myBuildAgent_1
      - myBuildAgent_2
      - myBuildAgent_3
      - myBuildAgent_4

  - name: helmVersion
    type: string
    default: v3.9.3

  - name: artifactoryURL
    type: string
    default: https://prod.artifactory.nfcu.net/artifactory

variables:
  - name: SelectedAgent
    value: ${{ if eq(parameters.AgentPool, 'CloudpoolAgentSelect') }} ${{ parameters.CloudpoolAgentSelect }}
             ${{ if eq(parameters.AgentPool, 'MatrixpoolAgentSelect') }} ${{ parameters.MatrixpoolAgentSelect }}
             ${{ if eq(parameters.AgentPool, 'TestAgentpoolAgentSelect') }} ${{ parameters.TestAgentpoolAgentSelect }}

  - name: PoolName
    value: ${{ parameters.AgentPool }}

stages:
  - stage: InstallHelm
    displayName: Install Helm

    jobs:
      - job: InstallHelm
        displayName: Install Helm Job
        pool:
          name: ${{ parameters.AgentPool }}
          demands:
            - Agent.ComputerName -equals ${{ variables.SelectedAgent }}

        steps:
          - task: bash@3
            displayName: Install Helm
            continueOnError: false
            inputs:
              targetType: inline
              script: |
                set -ax

                if [ -d "/opt/cicd-tools/helm/${{ parameters.helmVersion }}" ]; then
                  rm -rf /opt/cicd-tools/helm/${{ parameters.helmVersion }}
                fi

                echo "#============ =#"
                echo "# Install Helm  #"
                echo "#==============#"

                mkdir -p /opt/cicd-tools/helm/${{ parameters.helmVersion }}
                cd /opt/cicd-tools/helm/${{ parameters.helmVersion }}

                wget -q ${{ parameters.artifactoryURL }}/cicd-generic-release-local/helm/${{ parameters.helmVersion }}/linux/helm-${{ parameters.helmVersion }}-linux-amd64.tar.gz
                tar -zxf helm-${{ parameters.helmVersion }}-linux-amd64.tar.gz
                rm -rf helm-${{ parameters.helmVersion }}-linux-amd64.tar.gz

                ls -lart

                echo "#=====================#"
                echo "# Verify Helm Version #"
                echo "#=====================#"

                echo "Helm Version:" $(helm version)
                echo ""
                hostname
