name: Azure Terraform Deployment

on:
  push:
    branches:
      - azure-terraform
  pull_request:
    branches:
      - azure-terraform
  workflow_dispatch: # Allow manual triggering

jobs:
  terraform_plan:
    runs-on: [self-hosted, self-hosted-linux]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.ARM_CLIENT_ID }}", "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}", "tenantId": "${{ secrets.ARM_TENANT_ID }}", "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}"}'

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        working-directory: terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file=terraform.tfvars -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        working-directory: terraform

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: terraform/tfplan

  manual_approval:
    runs-on: [self-hosted, self-hosted-linux]
    needs: terraform_plan

    steps:
      - name: Create Approval Issue
        id: create_issue
        run: |
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}" \
            -d '{"title": "Approval Required for Terraform Apply", "body": "Comment `approve` or `deny` to proceed."}' \
            "https://api.github.com/repos/${{ github.repository }}/issues")
          issue_number=$(echo "$response" | jq -r '.number')
          echo "issue_number=$issue_number" >> $GITHUB_ENV

      - name: Wait for Approval
        run: |
          MAX_ATTEMPTS=10
          COUNTER=0
          APPROVAL_STATUS=""

          while [ "$COUNTER" -lt "$MAX_ATTEMPTS" ]; do
            comments=$(curl -s -H "Authorization: token ${{ secrets.GH_ACCESS_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ env.issue_number }}/comments")

            APPROVAL_STATUS=$(echo "$comments" | jq -r '.[] | select(.body | test("(?i)approve")) | .body')

            if [[ -n "$APPROVAL_STATUS" ]]; then
              echo "Approval granted."
              break
            elif echo "$comments" | jq -r '.[] | select(.body | test("(?i)deny"))'; then
              echo "Approval denied. Exiting."
              exit 1
            else
              echo "Waiting for approval... ($COUNTER/$MAX_ATTEMPTS)"
              COUNTER=$((COUNTER + 1))
              sleep 60
            fi
          done

          if [ -z "$APPROVAL_STATUS" ]; then
            echo "No approval received after $MAX_ATTEMPTS attempts. Exiting."
            exit 1
          fi

  terraform_apply:
    runs-on: [self-hosted, self-hosted-linux]
    needs: manual_approval

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: terraform

      - name: Terraform Init
        run: terraform init -backend-config="key=<STATE_FILE_NAME>"
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        working-directory: terraform
