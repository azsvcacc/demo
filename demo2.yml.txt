---
trigger: none
parameters:
  - name: AgentPool
    displayName: Pool VMImage Select
    type: string
    values:
      - LinuxAgent
      - Cloud-pool
      - Matrix-pool
      - CICD-Pool
      - digital-pool
      - MAVERICKpool
  - name: Linux-AgentEnabled
    type: boolean
    default: false
  - name: LinuxAgent
    displayName: Select Test Agent
    type: string
    values:
      - none
      - demo-vm-agent
      - myBuildAgent_1
      - myBuildAgent_2
      - myBuildAgent_3
      - myBuildAgent_4
  - name: CloudPoolEnabled
    type: boolean
    default: false
  - name: CloudPoolAgent
    displayName: Select Cloudpool Agent
    type: string
    values:
      - none
      - SLAZERVDEVOPS02
      - SLAZERVDEVOPS03
      - SLAZERVDEVOPS04
      - value1
  - name: MatrixEnabled
    type: boolean
    default: false
  - name: MatrixPoolAgent
    displayName: Select Matrix Pool Agent
    type: string
    values:
      - none
      - SLAZERVDEVOPS20
      - SLAZERVDEVOPS21
      - SLAZERVDEVOPS22
      - value1
      - value2
  - name: CICDPoolEnabled
    type: boolean
    default: false
  - name: CICDPoolAgent
    displayName: Select CICD-Pool Agent
    type: string
    values:
      - none
      - SLAZERVDEVOPS08
      - SLAZERVDEVOPS09
      - SLAZEXVDEVOPS02
      - value1
      - value2
  - name: DigitalPoolEnabled
    type: boolean
    default: false
  - name: DigitalPoolAgent
    displayName: Select Digital Pool Agent
    type: string
    values:
      - none
      - SLAZERVDEVOPS07
      - value1
      - value2
      - value3
      - value4
  - name: MAVERICKPoolEnabled
    type: boolean
    default: false
  - name: MAVERICKPoolAgent
    displayName: Select MAVERICK Pool Agent
    type: string
    values:
      - none
      - SLAZERVDEVOPS01
      - SLAZERVDEVOPS04
      - SLAZERVDEVOPS10
      - value1
      - value2
  - name: helmVersion
    type: string
    default: v3.9.3
  - name: artifactoryURL
    type: string
    default: https://prod.artifactory.nfcu.net/artifactory
stages:
  - stage: InstallHelm
    displayName: Install Helm
    pool:
      name: ${{ parameters.AgentPool }}
      demands:
        - "${{ if eq(parameters.AgentPool, 'LinuxAgent') }}":
            - Agent.ComputerName -equals ${{ parameters.LinuxAgent }}
        - "${{ if eq(parameters.AgentPool, 'Cloud-pool') }}":
            - Agent.ComputerName -equals ${{ parameters.CloudPoolAgent }}
        - "${{ if eq(parameters.AgentPool, 'Matrix-pool') }}":
            - Agent.ComputerName -equals ${{ parameters.MatrixPoolAgent }}
        - "${{ if eq(parameters.AgentPool, 'CICD-Pool') }}":
            - Agent.ComputerName -equals ${{ parameters.CICDPoolAgent }}
        - "${{ if eq(parameters.AgentPool, 'digital-pool') }}":
            - Agent.ComputerName -equals ${{ parameters.DigitalPoolAgent }}
        - "${{ if eq(parameters.AgentPool, 'MAVERICKpool') }}":
            - Agent.ComputerName -equals ${{ parameters.MAVERICKPoolAgent }}
    jobs:
      - job: InstallHelm
        workspace:
          clean: all
        steps:
          - task: bash@3
            displayName: InstallHelm
            continueOnError: false
            inputs:
              targetType: inline
              script: >
                set -ax

                if [ -d "/opt/cicd-tools/helm/${{ parameters.helmVersion }}" ]; then
                  rm -rf /opt/cicd-tools/helm/${{ parameters.helmVersion }}
                fi


                echo "#============ =#"


                echo "# Install Helm  #"


                echo "#==============#"


                mkdir -p /opt/cicd-tools/helm/${{ parameters.helmVersion }}


                cd /opt/cicd-tools/helm/${{ parameters.helmVersion }}


                wget https://get.helm.sh/helm-v3.9.3-linux-amd64.tar.gz


                #wget -q ${{ parameters.artifactoryURL }}/cicd-generic-release-local/helm/${{ parameters.helmVersion}}/linux/helm-${{ parameters.helmVersion}}.tar.gz

                tar -zxf helm-${{ parameters.helmVersion}}-linux-amd64.tar.gz


                ls -a


                mv linux-amd64/helm /usr/local/bin

              
                rm -rf helm-${{ parameters.helmVersion}}-linux-amd64.tar.gz


                ls -lart
                

                echo "#=====================#"


                echo "# Verify helm version. #"


                echo "#=====================#"


                echo "helm Version:" $(helm version)


                echo "" 


                hostname

